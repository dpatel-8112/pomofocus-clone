{"version":3,"sources":["component/Task.module.css","component/Pomodoro.module.css","component/Navbar.module.css","component/NavBar.jsx","component/PomodoroSettingButton.jsx","component/PomodoroSetting.jsx","component/PomodoroTime.jsx","component/Pomodoro.jsx","component/TaskLists.jsx","component/TaskModal.jsx","component/TaskAddButton.jsx","component/Task.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NavBar","className","style","ul","li","title","listItem","PomodoroSettingButton","activeTabHandler","key","id","value","useState","activeTab","setActiveTab","onClick","e","target","console","log","active","PomodoroSetting","tabs","map","tab","PomodoroTime","props","initialMinute","minutes","setMinutes","seconds","setSeconds","start","setStart","useEffect","myInterval","setInterval","clearInterval","document","time","startButton","visibility","position","left","cursor","border","padding","borderRadius","backgroundColor","color","fontSize","Pomodoro","bgColorHandler","bgColor","container","newActiveTab","TaskLists","editTaskHandler","ModalHandler","task","note","taskId","newTask","newTaskId","dropdown","bottom","marginRight","TaskModal","editTask","setTasksHandler","setTask","setNote","editaTask","editTaskId","editNote","modal","type","taskHeading","placeholder","onChange","noteContainer","rows","taskButtonContainer","taskButtonCancel","preventDefault","taskButtonSave","TaskAddButton","isModalOpen","addButton","addButtonIcon","Task","isDropdownOpen","setIsDropdownOpen","taskIdCount","setTaskIdCount","tasks","setTasks","setIsModalOpen","editTasdId","setEditTask","taskText1","taskText2","dropdownContent","divider","newNote","newState","slice","App","setBgColor","newBgColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,GAAK,iBAAiB,GAAK,iBAAiB,UAAY,wBAAwB,UAAY,wBAAwB,SAAW,uBAAuB,gBAAkB,8BAA8B,OAAS,qBAAqB,QAAU,sBAAsB,cAAgB,4BAA4B,UAAY,wBAAwB,MAAQ,oBAAoB,YAAc,0BAA0B,YAAc,0BAA0B,iBAAmB,+BAA+B,qBAAuB,mCAAmC,qBAAuB,mCAAmC,QAAU,sBAAsB,cAAgB,4BAA4B,oBAAsB,kCAAkC,iBAAmB,+BAA+B,eAAiB,+B,iBCAn2BD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,GAAK,qBAAqB,GAAK,qBAAqB,KAAO,uBAAuB,YAAc,8BAA8B,OAAS,2B,gBCAjMD,EAAOC,QAAU,CAAC,GAAK,mBAAmB,GAAK,mBAAmB,MAAQ,sBAAsB,SAAW,2B,qKCkB5FC,MAhBf,WACE,OACE,8BACE,qBAAIC,UAAWC,IAAMC,GAArB,UACE,qBAAIF,UAAS,UAAKC,IAAME,GAAX,YAAiBF,IAAMG,OAApC,UACG,IACD,0CAFF,gBAIA,oBAAIJ,UAAS,UAAKC,IAAME,GAAX,YAAiBF,IAAMI,UAApC,oBACA,oBAAIL,UAAS,UAAKC,IAAME,GAAX,YAAiBF,IAAMI,UAApC,qBACA,oBAAIL,UAAS,UAAKC,IAAME,GAAX,YAAiBF,IAAMI,UAApC,yB,gBCgBOC,MA1Bf,YAAsE,IAArCC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MAC1D,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,GAAD,OAAIV,IAAME,KAAxD,mBAUA,OAVA,UAWE,mCACE,wBACEW,QAXoB,SAACC,GACzBF,EAAaE,EAAEC,OAAOP,IACtBF,EAAiBQ,EAAEC,OAAOP,IAC1BQ,QAAQC,IAAIH,EAAEC,OAAOP,KASjBT,UAAS,UAAKC,IAAME,GAAX,YAAiBS,IAAcH,EAAKR,IAAMkB,OAAS,IAE5DV,GAAIA,EAJN,SAMGC,GAHIF,MCCEY,MAjBf,YAAsD,IAA3Bb,EAA0B,EAA1BA,iBAAkBc,EAAQ,EAARA,KAC3C,OACE,8BACE,oBAAIrB,UAAWC,IAAMC,GAArB,SACGmB,EAAKC,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CACEhB,iBAAkBA,EAElBE,GAAIc,EAAId,GACRC,MAAOa,EAAIb,OAFNa,EAAId,YCuENe,MA/Ef,SAAsBC,GACpB,IAAMC,EAAgBD,EAAMC,cAE5B,EAA8Bf,mBAASe,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BjB,mBAFR,GAEtB,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAA0BnB,oBAAS,GAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KAuCA,OA/BAC,qBAAU,WACR,GAAIF,EAAO,CACT,IAAIG,EAAaC,aAAY,WACvBN,EAAU,GACZC,EAAWD,EAAU,GAEP,IAAZA,IACc,IAAZF,GACFS,cAAcF,GACdN,EAAWF,GACXI,EArBY,GAsBZE,GAAS,GACTK,SAASjC,MAAT,mBAEAwB,EAAWD,EAAU,GACrBG,EAAW,QAGd,KAMH,OAJAO,SAASjC,MAAT,UAAoBuB,EAAU,GAAK,IAAMA,EAAUA,EAAnD,cACEE,EAAU,GAAK,IAAMA,EAAUA,EADjC,qBAIO,WACLO,cAAcF,GACdG,SAASjC,MAAT,qBAGH,CAAC2B,EAAOF,EAASF,IAGlB,gCACE,qBAAI3B,UAAWC,IAAMqC,KAArB,UACGX,EAAU,GAAV,WAAmBA,GAAYA,EADlC,IAEGE,EAAU,GAAV,WAAmBA,GAAYA,KAElC,wBAAQf,QAAS,kBAAMkB,GAAUD,IAAQ/B,UAAWC,IAAMsC,YAA1D,SACGR,EAAQ,OAAS,UAEpB,sBACEjB,QA/Cc,WAClBc,EAAWF,GACXI,EAPoB,GAQpBE,GAAS,IA6CL/B,MAAO,CACLuC,WAAW,GAAD,OAAKb,GAAWD,EAAX,oBACfe,SAAU,WACVC,KAAM,QALV,SAQE,wBACEzC,MAAO,CACL0C,OAAQ,UACRC,OAAQ,kBACRC,QAAS,WACTC,aAAc,MACdC,gBAAiB,SACjBC,MAAO,QACPC,SAAU,QARd,gCCvBOC,MApCf,YAAuC,IAAnBC,EAAkB,EAAlBA,eAClB,EAAkCxC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMQ,EAAO,CACX,CACEZ,GAAI,EACJC,MAAO,WACP0C,QAAS,oBAEX,CACE3C,GAAI,EACJC,MAAO,cACP0C,QAAS,qBAEX,CACE3C,GAAI,EACJC,MAAO,aACP0C,QAAS,sBAUb,OACE,sBAAKpD,UAAWC,IAAMoD,UAAtB,UACE,cAAC,EAAD,CAAiB9C,iBARI,SAAC+C,GACxBzC,EAAayC,GACbH,EAAe9B,EAAKiC,EAAe,GAAGF,SACtCnC,QAAQC,IAAIoC,IAK2CjC,KAAMA,IAC7C,GAAbT,GAAkB,cAAC,EAAD,CAAcc,cAAe,KAClC,GAAbd,GAAkB,cAAC,EAAD,CAAcc,cAAe,IAClC,GAAbd,GAAkB,cAAC,EAAD,CAAcc,cAAe,S,uBCJvC6B,MA7Bf,YAA6D,IAAxCC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,KAClD,EAAsC,CAACA,EAAKA,KAAMA,EAAKC,KAAMD,EAAKE,QAA3DC,EAAP,KAAyBC,EAAzB,KAOA,OACE,mCACGJ,GACC,qBAAI1D,UAAWC,IAAME,GAArB,UACE,+BAAO0D,IACP,qBACE7D,UAAWC,IAAM8D,SACjB9D,MAAO,CACL+D,OAAQ,EACRjB,gBAAiB,mBACjBkB,YAAa,OALjB,SAQE,sBAAMnD,QAlBI,WAClB0C,EAAgBM,GAChBL,KAgBQ,yBCiDGS,MAtEf,YAAiE,IAA5CC,EAA2C,EAA3CA,SAAUV,EAAiC,EAAjCA,aAAcW,EAAmB,EAAnBA,gBAC3C,EAAwBzD,mBAAS,IAAjC,mBAAO+C,EAAP,KAAaW,EAAb,KACA,EAAwB1D,mBAAS,IAAjC,mBAAOgD,EAAP,KAAaW,EAAb,KA6BA,OA5BArD,QAAQC,IAAIiD,EAASI,WAErBtC,qBAAU,WACJkC,EAASK,aACXH,EAAQF,EAASI,WACjBD,EAAQH,EAASM,aAElB,CAACN,EAASK,aAsBX,8BACE,sBAAKxE,UAAWC,IAAMyE,MAAtB,UACE,uBACEC,KAAK,OACL3E,UAAWC,IAAM2E,YACjBC,YAAY,0BACZnE,MAAOgD,EACPoB,SAAU,SAAC/D,GAAD,OAAOsD,EAAQtD,EAAEC,OAAON,UAEpC,qBAAKV,UAAWC,IAAM8E,cAAtB,SACE,0BACED,SAAU,SAAC/D,GAAD,OAAOuD,EAAQvD,EAAEC,OAAON,QAClCA,MAAOiD,EACPqB,KAAK,IACLH,YAAY,oBAIhB,sBAAK7E,UAAWC,IAAMgF,oBAAtB,UACE,wBACEnE,QA3BgB,WACxBuD,EAAQ,IACRC,EAAQ,IACRb,KAyBQzD,UAAWC,IAAMiF,iBAFnB,oBAMA,wBACEP,KAAK,SACL7D,QA1Cc,SAACC,GACvBA,EAAEoE,iBACFlE,QAAQC,IAAI,iBAAUwC,GAAV,iBAA6BC,IACpCD,IACLU,EAAgBV,EAAMC,EAAMQ,EAASK,YACrCf,MAsCQzD,UAAWC,IAAMmF,eAHnB,2BCjCKC,MAvBf,YAKI,IAJFlB,EAIC,EAJDA,SACAmB,EAGC,EAHDA,YACA7B,EAEC,EAFDA,aACAW,EACC,EADDA,gBAEA,OACE,gCACE,yBAAQpE,UAAWC,IAAMsF,UAAWzE,QAAS2C,EAA7C,UACE,sBAAMzD,UAAWC,IAAMuF,cAAvB,eADF,eAICF,GACC,cAAC,EAAD,CACEnB,SAAUA,EACVV,aAAcA,EACdW,gBAAiBA,QCgGZqB,MA9Gf,WACE,MAA4C9E,oBAAS,GAArD,mBAAO+E,EAAP,KAAuBC,EAAvB,KACA,EAAsChF,mBAAS,GAA/C,mBAAOiF,EAAP,KAAoBC,EAApB,KACA,EAA0BlF,mBAAS,CACjC,CACE+C,KAAM,GACNC,KAAM,GACNC,OAAQ,KAJZ,mBAAOkC,EAAP,KAAcC,EAAd,KAOA,EAAsCpF,oBAAS,GAA/C,mBAAO2E,EAAP,KAAoBU,EAApB,KACA,EAAgCrF,mBAAS,CACvCsF,WAAY,EACZ1B,UAAW,GACXE,SAAU,KAHZ,mBAAON,EAAP,KAAiB+B,EAAjB,KAMM1C,EAAkB,SAACI,GACR,IAAXA,IAGF3C,QAAQC,IAAI4E,EAAM,GAAGpC,MAEvBwC,EAAY,CACV1B,WAAYZ,EACZW,UAAWuB,EAAMlC,GAAQF,KACzBe,SAAUqB,EAAMlC,GAAQD,SAItBF,EAAe,WACnBuC,GAAgBV,IA0ClB,OACE,sBAAKtF,UAAWC,IAAMoD,UAAtB,UACE,qBAAKrD,UAAWC,IAAMkG,UAAtB,2BACA,qBAAKnG,UAAWC,IAAMmG,UAAtB,mBACA,sBAAKpG,UAAWC,IAAM8D,SAAUjD,QA3CR,WAC1B6E,GAAmBD,IA0CjB,UACE,uCACA,qBACE1F,UAAS,UAAKC,IAAMoG,gBAAX,YACPX,EAAiBzF,IAAMkB,OAAT,IAFlB,SAKE,oBAAInB,UAAWC,IAAME,GAArB,uCAGJ,qBAAKH,UAAWC,IAAMqG,UAEtB,cAAC,EAAD,CACEnC,SAAUA,EACVmB,YAAaA,EACb7B,aAAcA,EACdW,gBAvDkB,SAACP,EAAS0C,EAASzC,GACzC,GAAKA,EAGE,CACL,IAAM0C,EAAQ,YAAOV,GAYrB,OAXAU,EAAS1C,GAAa,CACpBJ,KAAMG,EACNF,KAAM4C,EACN3C,OAAQE,GAEViC,EAASS,QACTN,EAAY,CACVD,WAAY,EACZ1B,UAAW,GACXE,SAAU,KAbZX,EAAY8B,EACZC,EAAeD,EAAc,GAiB/BG,EAAS,GAAD,mBACHD,GADG,CAEN,CACElC,OAAQE,EACRJ,KAAMG,EACNF,KAAM4C,MAGVL,EAAY,CACVD,WAAY,EACZ1B,UAAW,GACXE,SAAU,QA2BV,oBAAIzE,UAAWC,IAAMC,GAArB,SAEG4F,EAAMW,MAAM,GAAGnF,KAAI,SAACoC,GAAD,OAClB,cAAC,EAAD,CACEF,gBAAiBA,EACjBC,aAAcA,EACdC,KAAMA,aCvFHgD,MAff,WACE,MAA8B/F,mBAAS,IAAvC,mBAAOyC,EAAP,KAAgBuD,EAAhB,KAKA,OACE,sBAAK1G,MAAO,CAAE8C,gBAAgB,GAAD,OAAKK,IAAapD,UAAU,MAAzD,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUmD,eANS,SAACyD,GACtBD,EAAWC,MAMT,cAAC,EAAD,QCJSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnF,SAASoF,eAAe,SAM1BZ,M","file":"static/js/main.215427c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Task_container__1cAPB\",\"ul\":\"Task_ul__1m7X9\",\"li\":\"Task_li__36hg-\",\"taskText1\":\"Task_taskText1__3J4LU\",\"taskText2\":\"Task_taskText2__evKKP\",\"dropdown\":\"Task_dropdown__18wFZ\",\"dropdownContent\":\"Task_dropdownContent__2me9t\",\"active\":\"Task_active__Pd3Ix\",\"divider\":\"Task_divider__-CN7B\",\"addButtonIcon\":\"Task_addButtonIcon__31s2H\",\"addButton\":\"Task_addButton__3e9kA\",\"modal\":\"Task_modal__1U9VP\",\"taskHeading\":\"Task_taskHeading__KAVpA\",\"estPomodoro\":\"Task_estPomodoro__H3w2d\",\"estPomodoroInput\":\"Task_estPomodoroInput__aTVMT\",\"estPomodoroIncrement\":\"Task_estPomodoroIncrement__22NDZ\",\"estPomodoroDecrement\":\"Task_estPomodoroDecrement__2pkDc\",\"addNote\":\"Task_addNote__3gf3-\",\"noteContainer\":\"Task_noteContainer__1ETrM\",\"taskButtonContainer\":\"Task_taskButtonContainer__2wShN\",\"taskButtonCancel\":\"Task_taskButtonCancel__3Y-Q3\",\"taskButtonSave\":\"Task_taskButtonSave__1DKYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pomodoro_container__237BZ\",\"ul\":\"Pomodoro_ul__6GQVk\",\"li\":\"Pomodoro_li__1x03b\",\"time\":\"Pomodoro_time__2n7TB\",\"startButton\":\"Pomodoro_startButton__Wk8AQ\",\"active\":\"Pomodoro_active__2dyHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Navbar_ul__21kdA\",\"li\":\"Navbar_li__2ja4s\",\"title\":\"Navbar_title__i9AGF\",\"listItem\":\"Navbar_listItem__3A8fR\"};","import React from \"react\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div>\r\n      <ul className={style.ul}>\r\n        <li className={`${style.li} ${style.title}`}>\r\n          {\" \"}\r\n          <span>âœ”</span> Pomofocus\r\n        </li>\r\n        <li className={`${style.li} ${style.listItem}`}>Report</li>\r\n        <li className={`${style.li} ${style.listItem}`}>Setting</li>\r\n        <li className={`${style.li} ${style.listItem}`}>Login</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./Pomodoro.module.css\";\r\n\r\nfunction PomodoroSettingButton({ activeTabHandler, key, id, value }) {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [activeClass, setActiveClass] = useState(`${style.li}`);\r\n\r\n  const currentTabHandler = (e) => {\r\n    setActiveTab(e.target.id);\r\n    activeTabHandler(e.target.id);\r\n    console.log(e.target.id);\r\n\r\n    // setActiveClass(`${style.li} ${style.active}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={currentTabHandler}\r\n        className={`${style.li} ${activeTab === id ? style.active : \"\"}`}\r\n        key={key}\r\n        id={id}\r\n      >\r\n        {value}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PomodoroSettingButton;\r\n","import React, { useState } from \"react\";\r\nimport PomodoroSettingButton from \"./PomodoroSettingButton\";\r\nimport style from \"./Pomodoro.module.css\";\r\n\r\nfunction PomodoroSetting({ activeTabHandler, tabs }) {\r\n  return (\r\n    <div>\r\n      <ul className={style.ul}>\r\n        {tabs.map((tab) => (\r\n          <PomodoroSettingButton\r\n            activeTabHandler={activeTabHandler}\r\n            key={tab.id}\r\n            id={tab.id}\r\n            value={tab.value}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PomodoroSetting;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport style from \"./Pomodoro.module.css\";\r\n\r\nfunction PomodoroTime(props) {\r\n  const initialMinute = props.initialMinute;\r\n  const initialSecond = 0;\r\n  const [minutes, setMinutes] = useState(initialMinute);\r\n  const [seconds, setSeconds] = useState(initialSecond);\r\n  const [start, setStart] = useState(false);\r\n\r\n  const nextHandler = () => {\r\n    setMinutes(initialMinute);\r\n    setSeconds(initialSecond);\r\n    setStart(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (start) {\r\n      let myInterval = setInterval(() => {\r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        }\r\n        if (seconds === 0) {\r\n          if (minutes === 0) {\r\n            clearInterval(myInterval);\r\n            setMinutes(initialMinute);\r\n            setSeconds(initialSecond);\r\n            setStart(false);\r\n            document.title = `Time to Work !`;\r\n          } else {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n          }\r\n        }\r\n      }, 1000);\r\n\r\n      document.title = `${minutes < 10 ? \"0\" + minutes : minutes} : ${\r\n        seconds < 10 ? \"0\" + seconds : seconds\r\n      } - Time to Work !`;\r\n\r\n      return () => {\r\n        clearInterval(myInterval);\r\n        document.title = `Time to Work !`;\r\n      };\r\n    }\r\n  }, [start, seconds, minutes]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={style.time}>\r\n        {minutes < 10 ? `0${minutes}` : minutes}:\r\n        {seconds < 10 ? `0${seconds}` : seconds}\r\n      </h1>\r\n      <button onClick={() => setStart(!start)} className={style.startButton}>\r\n        {start ? \"STOP\" : \"START\"}\r\n      </button>\r\n      <span\r\n        onClick={nextHandler}\r\n        style={{\r\n          visibility: `${minutes != initialMinute ? `visible` : `hidden`}`,\r\n          position: \"relative\",\r\n          left: \"20px\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            cursor: \"pointer\",\r\n            border: \"2px black solid\",\r\n            padding: \"3px 10px\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"tomato\",\r\n            color: \"white\",\r\n            fontSize: \"12px\",\r\n          }}\r\n        >\r\n          RESET âŸ³\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PomodoroTime;\r\n","import React, { useState } from \"react\";\r\nimport PomodoroSetting from \"./PomodoroSetting\";\r\nimport PomodoroTime from \"./PomodoroTime\";\r\nimport style from \"./Pomodoro.module.css\";\r\n\r\nfunction Pomodoro({ bgColorHandler }) {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      value: \"Pomodoro\",\r\n      bgColor: \"rgb(219, 82, 77)\",\r\n    },\r\n    {\r\n      id: 2,\r\n      value: \"Short Break\",\r\n      bgColor: \"rgb(70, 142, 145)\",\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"Long Break\",\r\n      bgColor: \"rgb(67, 126, 168)\",\r\n    },\r\n  ];\r\n\r\n  const activeTabHandler = (newActiveTab) => {\r\n    setActiveTab(newActiveTab);\r\n    bgColorHandler(tabs[newActiveTab - 1].bgColor);\r\n    console.log(newActiveTab);\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <PomodoroSetting activeTabHandler={activeTabHandler} tabs={tabs} />\r\n      {activeTab == 1 && <PomodoroTime initialMinute={25} />}\r\n      {activeTab == 2 && <PomodoroTime initialMinute={5} />}\r\n      {activeTab == 3 && <PomodoroTime initialMinute={15} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","import React from \"react\";\r\nimport style from \"./Task.module.css\";\r\n\r\nfunction TaskLists({ editTaskHandler, ModalHandler, task }) {\r\n  const [newTask, newNote, newTaskId] = [task.task, task.note, task.taskId];\r\n\r\n  const editHandler = () => {\r\n    editTaskHandler(newTaskId);\r\n    ModalHandler();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {task && (\r\n        <li className={style.li}>\r\n          <span>{newTask}</span>\r\n          <div\r\n            className={style.dropdown}\r\n            style={{\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0,0,0,0.25)\",\r\n              marginRight: \"4px\",\r\n            }}\r\n          >\r\n            <span onClick={editHandler}>...</span>\r\n          </div>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskLists;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./Task.module.css\";\r\n\r\nfunction TaskModal({ editTask, ModalHandler, setTasksHandler }) {\r\n  const [task, setTask] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  console.log(editTask.editaTask);\r\n\r\n  useEffect(() => {\r\n    if (editTask.editTaskId) {\r\n      setTask(editTask.editaTask);\r\n      setNote(editTask.editNote);\r\n    }\r\n  }, [editTask.editTaskId]);\r\n\r\n  // if (editTask.editaTask) {\r\n  //   setTask(editTask.editaTask);\r\n  //   setNote(editTask.editNote);\r\n  // }\r\n\r\n  const saveTaskHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(`Task - ${task}` + `Note - ${note}`);\r\n    if (!task) return;\r\n    setTasksHandler(task, note, editTask.editTaskId);\r\n    ModalHandler();\r\n  };\r\n\r\n  const cancelTaskHandler = () => {\r\n    setTask(\"\");\r\n    setNote(\"\");\r\n    ModalHandler();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.modal}>\r\n        <input\r\n          type=\"text\"\r\n          className={style.taskHeading}\r\n          placeholder=\"Write your task here !!\"\r\n          value={task}\r\n          onChange={(e) => setTask(e.target.value)}\r\n        />\r\n        <div className={style.noteContainer}>\r\n          <textarea\r\n            onChange={(e) => setNote(e.target.value)}\r\n            value={note}\r\n            rows=\"3\"\r\n            placeholder=\"Some Notes...\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className={style.taskButtonContainer}>\r\n          <button\r\n            onClick={cancelTaskHandler}\r\n            className={style.taskButtonCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={saveTaskHandler}\r\n            className={style.taskButtonSave}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskModal;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./Task.module.css\";\r\nimport TaskModal from \"./TaskModal\";\r\n\r\nfunction TaskAddButton({\r\n  editTask,\r\n  isModalOpen,\r\n  ModalHandler,\r\n  setTasksHandler,\r\n}) {\r\n  return (\r\n    <div>\r\n      <button className={style.addButton} onClick={ModalHandler}>\r\n        <span className={style.addButtonIcon}>+</span> Add Task\r\n      </button>\r\n\r\n      {isModalOpen && (\r\n        <TaskModal\r\n          editTask={editTask}\r\n          ModalHandler={ModalHandler}\r\n          setTasksHandler={setTasksHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskAddButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TaskInput from \"./TaskInput\";\r\nimport TaskLists from \"./TaskLists\";\r\nimport style from \"./Task.module.css\";\r\nimport TaskAddButton from \"./TaskAddButton\";\r\n\r\nfunction Task() {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [taskIdCount, setTaskIdCount] = useState(1);\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      task: \"\",\r\n      note: \"\",\r\n      taskId: 0,\r\n    },\r\n  ]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editTask, setEditTask] = useState({\r\n    editTasdId: 0,\r\n    editaTask: \"\",\r\n    editNote: \"\",\r\n  });\r\n\r\n  const editTaskHandler = (taskId) => {\r\n    if (taskId === 0) {\r\n      return;\r\n    } else {\r\n      console.log(tasks[0].task);\r\n    }\r\n    setEditTask({\r\n      editTaskId: taskId,\r\n      editaTask: tasks[taskId].task,\r\n      editNote: tasks[taskId].note,\r\n    });\r\n  };\r\n\r\n  const ModalHandler = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const taskDropdownHandler = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n  const setTasksHandler = (newTask, newNote, newTaskId) => {\r\n    if (!newTaskId) {\r\n      newTaskId = taskIdCount;\r\n      setTaskIdCount(taskIdCount + 1);\r\n    } else {\r\n      const newState = [...tasks];\r\n      newState[newTaskId] = {\r\n        task: newTask,\r\n        note: newNote,\r\n        taskId: newTaskId,\r\n      };\r\n      setTasks(newState);\r\n      setEditTask({\r\n        editTasdId: 0,\r\n        editaTask: \"\",\r\n        editNote: \"\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setTasks([\r\n      ...tasks,\r\n      {\r\n        taskId: newTaskId,\r\n        task: newTask,\r\n        note: newNote,\r\n      },\r\n    ]);\r\n    setEditTask({\r\n      editTasdId: 0,\r\n      editaTask: \"\",\r\n      editNote: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.taskText1}>Time to Work!</div>\r\n      <div className={style.taskText2}>Tasks</div>\r\n      <div className={style.dropdown} onClick={taskDropdownHandler}>\r\n        <span>...</span>\r\n        <div\r\n          className={`${style.dropdownContent} ${\r\n            isDropdownOpen ? style.active : ``\r\n          }`}\r\n        >\r\n          <li className={style.li}>Clear Finished Tasks</li>\r\n        </div>\r\n      </div>\r\n      <div className={style.divider} />\r\n\r\n      <TaskAddButton\r\n        editTask={editTask}\r\n        isModalOpen={isModalOpen}\r\n        ModalHandler={ModalHandler}\r\n        setTasksHandler={setTasksHandler}\r\n      />\r\n\r\n      <ul className={style.ul}>\r\n        {/* <TaskInput /> */}\r\n        {tasks.slice(1).map((task) => (\r\n          <TaskLists\r\n            editTaskHandler={editTaskHandler}\r\n            ModalHandler={ModalHandler}\r\n            task={task}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import \"./App.css\";\nimport NavBar from \"./component/NavBar\";\nimport Pomodoro from \"./component/Pomodoro\";\nimport Task from \"./component/Task\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [bgColor, setBgColor] = useState(\"\");\n\n  const bgColorHandler = (newBgColor) => {\n    setBgColor(newBgColor);\n  };\n  return (\n    <div style={{ backgroundColor: `${bgColor}` }} className=\"App\">\n      <NavBar />\n      <Pomodoro bgColorHandler={bgColorHandler} />\n      <Task />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}